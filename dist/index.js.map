{"version":3,"file":"index.js","sources":["../src/utilities/datetime.ts","../src/utilities/platform.ts","../src/utilities/uri.ts","../src/utilities/url.ts","../src/utilities/array.ts","../src/utilities/string.ts","../src/utilities/uuid.ts","../src/utilities/html.ts","../src/utilities/log/adapters/html.ts","../src/utilities/log/adapters/file.ts","../src/utilities/log.ts","../src/utilities/helper.ts","../src/utilities/random.ts","../src/index.ts"],"sourcesContent":["/**\r\n * returns the timestamp for any date or for now(), also works with browsers that dont support es5 Date.now\r\n * @param dateString \r\n */\r\nconst getTimestamp = (dateString: string | number = ''): number => {\r\n\r\n    let timestamp: number;\r\n\r\n    if (dateString === '') {\r\n        timestamp = new Date().getTime();\r\n    } else {\r\n        const date = new Date(dateString);\r\n        timestamp = date.getTime();\r\n    }\r\n\r\n    return timestamp;\r\n\r\n};\r\n\r\nexport { getTimestamp };\r\n","/**\r\n * does the script run on the server\r\n */\r\nconst isServer = (): boolean => {\r\n\r\n    if (typeof (global) === 'object') {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * does the script run in a client\r\n */\r\nconst isClient = (): boolean => {\r\n\r\n    return !isServer();\r\n\r\n};\r\n\r\nexport { isServer, isClient };\r\n","type TReplaceList = {\r\n    [key: string]: string\r\n}\r\n\r\n/**\r\n * decode uri\r\n * @param inputString \r\n */\r\nconst decodeUri = (inputString: string): string => {\r\n\r\n    const plusRegularExpression = /\\+/g;\r\n\r\n    // replace addition symbol with a space\r\n    return decodeURIComponent(inputString.replace(plusRegularExpression, ' '));\r\n\r\n};\r\n\r\n/**\r\n * encode uri\r\n * @param inputString \r\n */\r\nconst encodeUri = (inputString: string): string => {\r\n\r\n    const findRegularExpression = /[!'()~]|%20|%00/g;\r\n    const replaceList: TReplaceList = {\r\n        '!': '%21',\r\n        // tslint:disable-next-line\r\n        \"'\": '%27',\r\n        '(': '%28',\r\n        ')': '%29',\r\n        '~': '%7E',\r\n        '%20': '+',\r\n        '%00': '+'\r\n    };\r\n\r\n    return encodeURIComponent(inputString).replace(findRegularExpression, (match) => { return replaceList[match]; });\r\n\r\n};\r\n\r\nexport { decodeUri, encodeUri };\r\n","import { decodeUri } from './uri';\r\n\r\n/**\r\n * get url parameters\r\n * @param query \r\n */\r\nconst getUrlParameters = (query = ''): { [s: string]: string; } => {\r\n\r\n    const urlParameters: { [s: string]: string; } = {};\r\n\r\n    if (query !== '' && typeof query === 'string') {\r\n\r\n        const questionmarkIndex = query.indexOf('?');\r\n\r\n        // if -1 there is no questionmark, skip, all is fine\r\n        // else just keep what comes after the questionmark\r\n        if (questionmarkIndex !== -1) {\r\n            query = query.slice(questionmarkIndex + 1);\r\n        }\r\n\r\n        const pairs: string[] = query.split('&');\r\n        let i;\r\n\r\n        for (i = 0; i < pairs.length; i++) {\r\n\r\n            const pair: string = pairs[i];\r\n            const equalIndex: number = pair.indexOf('=');\r\n            let parameterKey = '';\r\n            let parameterValue = '';\r\n\r\n            if (equalIndex > -1) {\r\n                parameterKey = pair.slice(0, equalIndex);\r\n                parameterValue = pair.slice(equalIndex + 1);\r\n            } else {\r\n                parameterKey = pair;\r\n            }\r\n\r\n            urlParameters[decodeUri(parameterKey)] = decodeUri(parameterValue);\r\n        }\r\n\r\n    }\r\n\r\n    return urlParameters;\r\n\r\n};\r\n\r\n/**\r\n * URL utility to get a parameter by name from an URL\r\n * @param name \r\n * @param url \r\n */\r\nconst getUrlParameterByName = (name: string, url: string): string => {\r\n\r\n    if (!url) {\r\n        url = window.location.href;\r\n    }\r\n\r\n    name = name.replace(/[[]]/g, '\\\\$&');\r\n\r\n    const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\r\n    const results = regex.exec(url);\r\n\r\n    if (!results) {\r\n        return null;\r\n    }\r\n\r\n    if (!results[2]) {\r\n        return '';\r\n    }\r\n\r\n    return decodeUri(results[2]);\r\n\r\n};\r\n\r\n/**\r\n * URL utility to replace a given parameter\r\n * @param url \r\n * @param paramName \r\n * @param paramValue \r\n */\r\nconst replaceUrlParameter = (url: string, paramName: string, paramValue: string|number): string => {\r\n\r\n    const pattern = new RegExp('\\\\b(' + paramName + '=).*?(&|$)');\r\n\r\n    if (url.search(pattern) >= 0) {\r\n        return url.replace(pattern, '$1' + paramValue + '$2');\r\n    }\r\n\r\n    return url + (url.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;\r\n\r\n};\r\n\r\nexport { getUrlParameters, getUrlParameterByName, replaceUrlParameter };\r\n","/**\r\n * finds \"removeMe\" and removes it from the array\r\n * @param array \r\n * @param removeMe \r\n */\r\nconst removeString = (myArray: string[], removeMe: string): string[] => {\r\n\r\n    const index = myArray.indexOf(removeMe);\r\n\r\n    if (index > -1) {\r\n        myArray.splice(index, 1);\r\n    }\r\n\r\n    return myArray;\r\n\r\n};\r\n\r\n/**\r\n * is array with polyfill for older browsers\r\n * @param input \r\n */\r\nconst isArray = (input: unknown): boolean => {\r\n\r\n    // MDN is array documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\r\n\r\n    if (!Array.isArray) {\r\n        return Object.prototype.toString.call(input) === '[object Array]';\r\n    } else {\r\n        return Array.isArray(input);\r\n    }\r\n\r\n};\r\n\r\ndeclare global  {\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    interface Array<T> {\r\n        includes(valueToFind: string, fromIndex?: number): boolean;\r\n    }\r\n}\r\n\r\n/**\r\n * finds \"toFind\" in an array, starting at an optional index\r\n * @param inputArray \r\n * @param toFind \r\n * @param fromIndex \r\n */\r\nconst includes = (inputArray: [], toFind: string, fromIndex?: number): boolean => {\r\n\r\n    // MDN includes documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\r\n\r\n    if (!Array.prototype.includes) {\r\n\r\n        // https://tc39.github.io/ecma262/#sec-array.prototype.includes\r\n\r\n        if (this == null) {\r\n            throw new TypeError('\"this\" is null or not defined');\r\n        }\r\n\r\n        // 1. Let O be ? ToObject(this value)\r\n        const o = Object(this);\r\n\r\n        // 2. Let len be ? ToLength(? Get(O, \"length\"))\r\n        const len = o.length >>> 0;\r\n\r\n        // 3. If len is 0, return false\r\n        if (len === 0) {\r\n            return false;\r\n        }\r\n\r\n        // 4. Let n be ? ToInteger(fromIndex)\r\n        //    (If fromIndex is undefined, this step produces the value 0.)\r\n        const n = fromIndex | 0;\r\n\r\n        // 5. If n ≥ 0, then\r\n        //  a. Let k be n.\r\n        // 6. Else n < 0,\r\n        //  a. Let k be len + n.\r\n        //  b. If k < 0, let k be 0.\r\n        let k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\r\n        // 7. Repeat, while k < len\r\n        while (k < len) {\r\n            // a. Let elementK be the result of ? Get(O, ! ToString(k))\r\n            // b. If SameValueZero(valueToFind, elementK) is true, return true\r\n            if (sameValueZero(o[k], toFind)) {\r\n                return true;\r\n            }\r\n            // c. Increase k by 1\r\n            k++;\r\n        }\r\n\r\n        // 8. Return false\r\n        return false;\r\n    } else {\r\n        const n = fromIndex | 0;\r\n        return inputArray.includes(toFind, n);\r\n    }\r\n};\r\n\r\nconst sameValueZero = (x: unknown, y: unknown): boolean => {\r\n    return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n};\r\n\r\n/**\r\n * \r\n * @param inputArray \r\n * @param predicate \r\n * @param args \r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\nconst find = (inputArray: [], predicate: (this: void, value: never, index: number, obj: never[]) => value is never, args?: any): never | undefined => {\r\n\r\n    // MDN find documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\n\r\n    if (!Array.prototype.find) {\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\n\r\n        // 1. Let O be ? ToObject(this value)\r\n        if (this == null) {\r\n            throw new TypeError('\"this\" is null or not defined');\r\n        }\r\n\r\n        const o = Object(this);\r\n\r\n        // 2. Let len be ? ToLength(? Get(O, \"length\"))\r\n        const len = o.length >>> 0;\r\n\r\n        // 3. If IsCallable(predicate) is false, throw a TypeError exception\r\n        if (typeof predicate !== 'function') {\r\n            throw new TypeError('predicate must be a function');\r\n        }\r\n\r\n        // 4. If thisArg was supplied, let T be thisArg; else let T be undefined\r\n        const thisArg = args[1];\r\n\r\n        // 5. Let k be 0.\r\n        let k = 0;\r\n\r\n        // 6. Repeat, while k < len\r\n        while (k < len) {\r\n            // a. Let Pk be ! ToString(k)\r\n            // b. Let kValue be ? Get(O, Pk)\r\n            // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »))\r\n            // d. If testResult is true, return kValue\r\n            const kValue = o[k];\r\n            if (predicate.call(thisArg, kValue, k, o)) {\r\n                return kValue;\r\n            }\r\n            // e. Increase k by 1\r\n            k++;\r\n        }\r\n\r\n        // 7. Return undefined\r\n        return undefined;\r\n\r\n    } else {\r\n        // eslint-disable-next-line\r\n        return inputArray.find(predicate, args);\r\n    }\r\n};\r\n\r\ndeclare global  {\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    interface Array<T> {\r\n        flat(depth: number): [];\r\n    }\r\n}\r\n\r\n/**\r\n * array flat polyfill, if depth is unknow set it to \"Infinity\"\r\n * @param inputArray \r\n * @param depth \r\n */\r\nconst flat = (inputArray: [], depth = Infinity): [] => {\r\n\r\n    // MDN flat documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\r\n\r\n    if (!Array.prototype.flat) {\r\n        return flatten(inputArray, Math.floor(depth) || 1);\r\n    } else {\r\n        return inputArray.flat(depth);\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * flattens a multidimensional array\r\n * @param inputArray \r\n * @param depth \r\n */\r\nconst flatten = (inputArray: [], depth = Infinity): [] => {\r\n\r\n    const flattend: [] = [];\r\n\r\n    for (const el of inputArray) {\r\n        if (isArray(el) && depth > 0) {\r\n            flatten(el, depth - 1);\r\n        } else {\r\n            flattend.push(el);\r\n        }\r\n    }\r\n\r\n    return flattend;\r\n\r\n};\r\n\r\nexport { removeString, isArray, includes, find, flat };\r\n","/**\r\n * filters a string\r\n * removes everything that is a not an alpha or numeric character, plus\r\n * the characters if any got specified as second argument\r\n * @param inputString \r\n * @param specialCharacters \r\n */\r\nconst filterAlphaNumericPlus = (inputString: string, specialCharacters: string): string|boolean => {\r\n\r\n    if (typeof (inputString) === 'string' && inputString.length > 0) {\r\n\r\n        let outputString;\r\n\r\n        if (specialCharacters !== undefined) {\r\n\r\n            const regex = RegExp('[^a-z0-9' + specialCharacters + ']', 'gi');\r\n\r\n            outputString = inputString.replace(regex, '');\r\n\r\n        } else {\r\n            outputString = inputString.replace(/[^a-z0-9]/gi, '');\r\n        }\r\n\r\n        return outputString;\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n};\r\n\r\n/**\r\n * capitalise first letter of a string\r\n * @param inputString \r\n */\r\nconst capitaliseFirstLetter = (inputString: string): string => {\r\n\r\n    return inputString.charAt(0).toUpperCase() + inputString.slice(1);\r\n\r\n};\r\n\r\n/**\r\n * does a string contain another string\r\n * @param inputString \r\n * @param contains \r\n */\r\nconst stringContains = (inputString: string, contains: string): boolean => {\r\n\r\n    if (typeof inputString !== 'string') {\r\n        throw 'input is not a string';\r\n    }\r\n\r\n    if (inputString.indexOf(contains) > -1) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * get the index of a substring in a string with optional nth time it occurs\r\n * @param inputString \r\n * @param substring \r\n * @param nthTime \r\n */\r\nconst getSubstringIndex = (inputString: string, substring: string, nthTime: number): number => {\r\n\r\n    let times = 0;\r\n    let index = null;\r\n\r\n    if (nthTime === 0) {\r\n        nthTime = 1;\r\n    }\r\n\r\n    while (times < nthTime && index !== -1) {\r\n\r\n        index = inputString.indexOf(substring, index + 1);\r\n        times++;\r\n\r\n    }\r\n\r\n    return index;\r\n\r\n};\r\n\r\n/**\r\n * replace the placeholder(s) with some value\r\n * @param input \r\n * @param replacements \r\n */\r\nconst replacePlaceholders = (input: string, replacements: string): string => {\r\n\r\n    let output = input;\r\n\r\n    if (typeof input === 'string' && typeof replacements === 'object') {\r\n\r\n        output = input.replace(/\\b\\w+?\\b/g, function replacePlaceHolder(placeholder) {\r\n            return Object.prototype.hasOwnProperty.call(replacements, placeholder) ? replacements[placeholder] : placeholder;\r\n        });\r\n\r\n    }\r\n\r\n    return output;\r\n\r\n};\r\n\r\nexport { filterAlphaNumericPlus, capitaliseFirstLetter, stringContains, getSubstringIndex, replacePlaceholders };\r\n","/**\r\n * returns a universally unique identifier\r\n */\r\nconst generateUUID = (): string => {\r\n\r\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\r\n\r\n    // http://www.ietf.org/rfc/rfc4122.txt\r\n    \r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const s: any[] = [];\r\n    const hexDigits = '0123456789abcdef';\r\n    let i;\r\n\r\n    for (i = 0; i < 36; i++) {\r\n        s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n    }\r\n\r\n    s[14] = 4;  // bits 12-15 of the time_hi_and_version field to 0010\r\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n    s[8] = s[13] = s[18] = s[23] = '-';\r\n\r\n    const uuid = s.join('');\r\n\r\n    return uuid;\r\n\r\n};\r\n\r\nexport { generateUUID };\r\n","/**\r\n * extracts html elements (and their content) from strings\r\n * @param text \r\n * @param removeTextBetweenTags \r\n */\r\nconst removeElements = (text: string, removeTextBetweenTags: boolean): string => {\r\n\r\n    if (removeTextBetweenTags === false) {\r\n\r\n        // replace single tags\r\n        text = text.replace(/<[^>]*>?/g, '');\r\n\r\n    } else {\r\n\r\n        // replace all tags and whats inside\r\n        text = text.replace(/<[^>]*>[^>]*<\\/[^>]*>?/g, '');\r\n\r\n        // replace single tags\r\n        text = text.replace(/<[^>]*>?/g, '');\r\n\r\n    }\r\n\r\n    return text;\r\n\r\n};\r\n\r\nexport { removeElements };\r\n","import { removeElements } from './../../html';\r\n\r\n/**\r\n * html log\r\n * create a div an insert the messages in div\r\n * can be usefull on mobile if no other console is available\r\n * @param logObjects \r\n * @param logObjectsLength \r\n * @param logFontColor \r\n * @param logBackgroundColor \r\n */\r\nconst htmlLog = (logObjects: string[], logObjectsLength: number, logFontColor: string, logBackgroundColor: string): void => {\r\n\r\n    // TODO: fix: seems that if logging starts before \"domload\" some\r\n    // messages get lost\r\n\r\n    if (document.getElementById('log') === null) {\r\n\r\n        const logDiv = document.createElement('div');\r\n\r\n        logDiv.id = 'log';\r\n\r\n        logDiv.style.cssText = 'position: absolute; overflow: scroll; left: 0; bottom: 0; padding: 0; margin: 0; border: 0; z-index: 999999; width: 100%; height: 20%; background-color: #fff;';\r\n\r\n        document.body.appendChild(logDiv);\r\n\r\n    }\r\n\r\n    let i;\r\n\r\n    for (i = 0; i < logObjectsLength; i++) {\r\n\r\n        const logSpan = document.createElement('span');\r\n\r\n        logSpan.style.cssText = 'color: #' + logFontColor + '; background-color: #' + logBackgroundColor + ';';\r\n\r\n        const logObject = logObjects[i];\r\n\r\n        const spanContent = document.createTextNode(logObject);\r\n\r\n        logSpan.appendChild(spanContent);\r\n\r\n        document.getElementById('log').appendChild(logSpan);\r\n\r\n        const brElement = document.createElement('br');\r\n\r\n        document.getElementById('log').appendChild(brElement);\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * extracts html elements (and their content) from strings\r\n * @param rawText \r\n * @param extendedEscape \r\n * @param myEscapeList \r\n */\r\nconst safeUnescape = (rawText: string, extendedEscape = false, myEscapeList: string[]): string => {\r\n\r\n    interface IEscapeList {\r\n        [key: string]: string;\r\n    }\r\n\r\n    const unEscapeList: IEscapeList = {\r\n        // usually you would just escape (unescape) characters that get\r\n        // used in (x)html\r\n        '&amp;': '&',\r\n        '&lt;': '<',\r\n        '&gt;': '>',\r\n        '&quot;': '\"',\r\n        '&#x27;': '\\'',\r\n        '&#x60;': '`'\r\n    };\r\n\r\n    // by default also use extended list\r\n    if (extendedEscape === true) {\r\n\r\n        const unEscapeExtendedList: IEscapeList = {\r\n            // but in the case where everything has been encoded lets decode these too\r\n            '&lsquo;': '‘',\r\n            '&rsquo;': '’',\r\n            '&sbquo;': '‚',\r\n            '&ldquo;': '“',\r\n            '&rdquo;': '”',\r\n            '&bdquo;': '„',\r\n            '&dagger;': '†',\r\n            '&Dagger;': '‡',\r\n            '&permil;': '‰',\r\n            '&lsaquo;': '‹',\r\n            '&rsaquo;': '›',\r\n            '&ndash;': '-',\r\n            '&mdash;': '—',\r\n            '&nbsp;': ' ',\r\n            '&iexcl;': '¡',\r\n            '&cent;': '¢',\r\n            '&pound;': '£',\r\n            '&curren;': '¤',\r\n            '&yen;': '¥',\r\n            '&brvbar;': '¦',\r\n            '&brkbar;': '¦',\r\n            '&sect;': '§',\r\n            '&uml;': '¨',\r\n            '&die;': '¨',\r\n            '&copy;': '©',\r\n            '&ordf;': 'ª',\r\n            '&laquo;': '«',\r\n            '&not;': '¬',\r\n            '&shy;': ' ',\r\n            '&reg;': '®',\r\n            '&macr;': '¯',\r\n            '&hibar;': '¯',\r\n            '&deg;': '°',\r\n            '&plusmn;': '±',\r\n            '&sup2;': '²',\r\n            '&sup3;': '³',\r\n            '&acute;': '´',\r\n            '&micro;': 'µ',\r\n            '&para;': '¶',\r\n            '&middot;': '·',\r\n            '&cedil;': '¸',\r\n            '&sup1;': '¹',\r\n            '&ordm;': 'º',\r\n            '&raquo;': '»',\r\n            '&frac14;': '¼',\r\n            '&frac12;': '½',\r\n            '&frac34;': '¾',\r\n            '&iquest;': '¿'\r\n        };\r\n\r\n        for (const key in unEscapeExtendedList) {\r\n            unEscapeList[key] = unEscapeExtendedList[key];\r\n        }\r\n\r\n    }\r\n\r\n    if (myEscapeList !== undefined) {\r\n\r\n        for (const key in myEscapeList) {\r\n            unEscapeList[key] = myEscapeList[key];\r\n        }\r\n\r\n    }\r\n\r\n    const escaper = function (match: string) {\r\n        return unEscapeList[match];\r\n    };\r\n\r\n    // regexes for identifying a key that needs to be escaped\r\n    const unEscapeKeys = Object.keys(unEscapeList);\r\n    const source = '(?:' + unEscapeKeys.join('|') + ')';\r\n    const testRegexp = RegExp(source);\r\n    const replaceRegexp = RegExp(source, 'g');\r\n\r\n    rawText = rawText == null ? '' : '' + rawText;\r\n\r\n    const unescapedText = testRegexp.test(rawText) ? rawText.replace(replaceRegexp, escaper) : rawText;\r\n\r\n    const text = removeElements(unescapedText, false);\r\n\r\n    return text;\r\n\r\n};\r\n\r\nexport { htmlLog, safeUnescape };\r\n","/**\r\n * nodejs logging to file\r\n * @param logObjects \r\n * @param logObjectsLength \r\n * @param logFontColor \r\n */\r\nconst fileLog = (logObjects: unknown, logObjectsLength: number, logFontColor: string): void => {\r\n\r\n    console.log(logObjects);\r\n    console.log(logObjectsLength);\r\n    console.log(logFontColor);\r\n\r\n    throw new Error('sorry this feature is broken');\r\n\r\n    try {\r\n\r\n        /*var winston = require('winston');\r\n\r\n        for (var i = 0; i < logObjectsLength; i++) {\r\n\r\n            switch (logFontColor) {\r\n                case 'red':\r\n                    winston.error(logObjects[i]);\r\n                    break;\r\n                case 'yellow':\r\n                    winston.warn(logObjects[i]);\r\n                    break;\r\n                default:\r\n                    winston.info(logObjects[i]);\r\n            }\r\n\r\n        }*/\r\n\r\n    } catch (e) {\r\n\r\n        // winston is not installed\r\n\r\n    }\r\n\r\n};\r\n\r\nexport { fileLog };\r\n","import { htmlLog } from './log/adapters/html';\r\nimport { fileLog } from './log/adapters/file';\r\n\r\nconst defaultLogFontColor = 'default';\r\nconst defaultLogBackgroundColor = 'default';\r\n//const logSpecial = false;\r\nconst logVerbose = true;\r\n\r\n/**\r\n * log messages\r\n * @param args \r\n */\r\nconst log = (...args: unknown[]): void => {\r\n\r\n    // is console defined, some older IEs don't have a console\r\n    if (typeof (console) === 'undefined') {\r\n\r\n        throw new Error('This browser does not support console');\r\n\r\n    }\r\n\r\n    // extract options and get objects to log\r\n    // read: https://github.com/Microsoft/TypeScript/issues/1609\r\n    const logArguments = handleLogArguments(args);\r\n\r\n    const logObjects = logArguments.objects;\r\n    const logFontColor = logArguments.fontColor;\r\n    const logBackgroundColor = logArguments.backgroundColor;\r\n\r\n    const logObjectsLength = logObjects.length;\r\n\r\n    // nodejs or browser mode\r\n    if (typeof (window) === 'undefined') {\r\n\r\n        if (typeof (logVerbose) !== 'undefined'\r\n        && logVerbose === true) {\r\n\r\n            // get background and fontColor codes\r\n            const color = getServerColors(logFontColor, logBackgroundColor);\r\n\r\n            // log each object\r\n            for (let i = 0; i < logObjectsLength; i++) {\r\n\r\n                if (typeof (logObjects[i]) === 'string') {\r\n                    console.log(color.background + color.font + logObjects[i] + color.reset);\r\n                } else {\r\n                    console.log(logObjects[i]);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // log to file if logSpecial is enabled or if the fontColor is red\r\n        // if (logSpecial === true || logFontColor === 'red') {\r\n        if (logFontColor === 'red') {\r\n\r\n            fileLog(logObjects, logObjectsLength, logFontColor);\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        // get background and fontColor codes\r\n        const color = getClientColors(logFontColor, logBackgroundColor);\r\n\r\n        if (typeof (logVerbose) !== 'undefined'\r\n        && logVerbose === true) {\r\n\r\n            // log each object\r\n            for (let i = 0; i < logObjectsLength; i++) {\r\n\r\n                if (typeof (logObjects[i]) === 'string') {\r\n                    console.log('%c' + logObjects[i], 'background: #' + color.background + '; color: #' + color.font);\r\n                } else {\r\n                    console.log(logObjects[i]);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // log to html if logSpecial is enabled\r\n        //if (logSpecial === true) {\r\n\r\n        const stringLogObjects: string[] = [];\r\n\r\n        logObjects.forEach((logObject) => {\r\n            stringLogObjects.push(logObject.toString())\r\n        });\r\n\r\n        htmlLog(stringLogObjects, logObjectsLength, color.font, color.background);\r\n\r\n        //}\r\n\r\n    }\r\n\r\n};\r\n\r\ninterface IColors {\r\n    red: string;\r\n    green: string;\r\n    yellow: string;\r\n    blue: string;\r\n    magenta: string;\r\n    cyan: string;\r\n    white: string;\r\n    black: string;\r\n    [key: string]: string;\r\n}\r\n\r\n/**\r\n * get the client side (browser) colors\r\n * @param logFontColor \r\n * @param logBackgroundColor \r\n */\r\nconst getClientColors = (logFontColor: string, logBackgroundColor: string) => {\r\n\r\n    const colors: IColors = {\r\n        red: 'FF0000',\r\n        green: '00FF00',\r\n        yellow: 'FFFF00',\r\n        blue: '0000FF',\r\n        magenta: 'FF00FF',\r\n        cyan: '00FFFF',\r\n        white: 'FFFFFF',\r\n        black: '000000'\r\n    };\r\n\r\n    let fontColor;\r\n    let backgroundColor;\r\n\r\n    // font color\r\n    if (typeof (logFontColor) === 'undefined'\r\n    || logFontColor === 'default') {\r\n\r\n        fontColor = colors['black'];\r\n\r\n    } else {\r\n\r\n        if (typeof (colors[logFontColor]) !== 'undefined') {\r\n            fontColor = colors[logFontColor];\r\n        } else {\r\n            throw 'unknown fontColor in utilities console log';\r\n        }\r\n\r\n    }\r\n\r\n    // background color\r\n    if (typeof (logBackgroundColor) === 'undefined'\r\n    || logBackgroundColor === 'default') {\r\n\r\n        backgroundColor = colors['white'];\r\n\r\n    } else {\r\n\r\n        if (typeof (colors[logBackgroundColor]) !== 'undefined') {\r\n            backgroundColor = colors[logBackgroundColor];\r\n        } else {\r\n            throw 'unknown fontColor in utilities console log';\r\n        }\r\n\r\n    }\r\n\r\n    return { font: fontColor, background: backgroundColor };\r\n\r\n};\r\n\r\n/**\r\n * get the colors for the backend (server) console\r\n * @param logFontColor \r\n * @param logBackgroundColor \r\n */\r\nconst getServerColors = (logFontColor: string, logBackgroundColor: string) => {\r\n\r\n    const backgroundColors: IColors = {\r\n        black: '\\u001b[40m',\r\n        red: '\\u001b[41m',\r\n        green: '\\u001b[42m',\r\n        yellow: '\\u001b[43m',\r\n        blue: '\\u001b[44m',\r\n        magenta: '\\u001b[45m',\r\n        cyan: '\\u001b[46m',\r\n        white: '\\u001b[47m'\r\n    };\r\n\r\n\r\n\r\n    const foregroundColors: IColors = {\r\n        black: '\\u001b[30m',\r\n        red: '\\u001b[31m',\r\n        green: '\\u001b[32m',\r\n        yellow: '\\u001b[33m',\r\n        blue: '\\u001b[34m',\r\n        magenta: '\\u001b[35m',\r\n        cyan: '\\u001b[36m',\r\n        white: '\\u001b[37m'\r\n    };\r\n\r\n    let fontColor;\r\n    let backgroundColor;\r\n\r\n    // font color\r\n    if (typeof (logFontColor) === 'undefined'\r\n    || logFontColor === 'default') {\r\n\r\n        fontColor = foregroundColors['white'];\r\n\r\n    } else {\r\n\r\n        if (typeof (foregroundColors[logFontColor]) !== 'undefined') {\r\n            fontColor = foregroundColors[logFontColor];\r\n        } else {\r\n            throw 'unknown font color in utilities console log';\r\n        }\r\n\r\n    }\r\n\r\n    // background color\r\n    if (typeof (logBackgroundColor) === 'undefined'\r\n    || logBackgroundColor === 'default') {\r\n\r\n        backgroundColor = backgroundColors['black'];\r\n\r\n    } else {\r\n\r\n        if (typeof (backgroundColors[logBackgroundColor]) !== 'undefined') {\r\n            backgroundColor = backgroundColors[logBackgroundColor];\r\n        } else {\r\n            throw 'unknown background color in utilities console log';\r\n        }\r\n\r\n    }\r\n\r\n    return { font: fontColor, background: backgroundColor, reset: '\\u001b[0m' };\r\n\r\n};\r\n\r\n/**\r\n * handle log arguments\r\n * extract the color infos from the arguments to log\r\n * @param logArguments \r\n */\r\nconst handleLogArguments = (logArguments?: unknown[]) => {\r\n\r\n    const logObjects = [];\r\n\r\n    let logFontColor = defaultLogFontColor;\r\n    let logBackgroundColor = defaultLogBackgroundColor;\r\n\r\n    const argumentsLength = logArguments.length;\r\n\r\n    let i;\r\n\r\n    for (i = 0; i < argumentsLength; i++) {\r\n\r\n        const argument = logArguments[i];\r\n\r\n        if (typeof argument === 'string') {\r\n\r\n            if (argument.substr(0, 10) === 'fontColor:') {\r\n                logFontColor = argument.substr(10, argument.length).trim();\r\n            } else if (argument.substr(0, 16) === 'backgroundColor:') {\r\n                logBackgroundColor = argument.substr(16, argument.length).trim();\r\n            } else {\r\n                logObjects.push(argument);\r\n            }\r\n\r\n        } else {\r\n            logObjects.push(argument);\r\n        }\r\n\r\n    }\r\n\r\n    return { objects: logObjects, fontColor: logFontColor, backgroundColor: logBackgroundColor };\r\n\r\n};\r\n\r\nexport { log };\r\n","/**\r\n * pauses your script for a given time, returns a promise that you can use to do so\r\n * @param ms \r\n */\r\nconst sleep = (ms: number): Promise<void> => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport { sleep };","/**\r\n * returns a random integer that lies between min (included) and max (included)\r\n * @param min \r\n * @param max \r\n */\r\nconst randomInteger = (min = 0, max = Infinity, prng?: typeof Math): number => {\r\n    // support for custom PRNGs, like https://www.npmjs.com/package/seedrandom\r\n    if (prng) {\r\n        prng.floor(prng.random() * (max - min + 1) + min);\r\n    } else {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n}\r\n\r\nconst choice = (sequence: unknown[] = [], prng?: typeof Math): unknown => {\r\n    // support for custom PRNGs, like https://www.npmjs.com/package/seedrandom\r\n    if (prng) {\r\n        return sequence[prng.floor(prng.random() * sequence.length)];\r\n    } else {\r\n        return sequence[Math.floor(Math.random() * sequence.length)];\r\n    }\r\n}\r\n\r\nexport { randomInteger, choice }","import { getTimestamp } from './utilities/datetime';\r\nimport { isServer, isClient } from './utilities/platform';\r\nimport { getUrlParameters, getUrlParameterByName, replaceUrlParameter } from './utilities/url';\r\nimport { decodeUri, encodeUri } from './utilities/uri';\r\nimport { removeString, isArray, includes, find, flat } from './utilities/array';\r\nimport { filterAlphaNumericPlus, capitaliseFirstLetter, stringContains, getSubstringIndex, replacePlaceholders } from './utilities/string';\r\nimport { generateUUID } from './utilities/uuid';\r\nimport { removeElements } from './utilities/html';\r\nimport { log } from './utilities/log';\r\nimport { sleep } from './utilities/helper';\r\nimport { randomInteger, choice } from './utilities/random';\r\n\r\nconst version = '1.0.0';\r\n\r\nexport {\r\n    version,\r\n    getTimestamp,\r\n    isServer,\r\n    isClient,\r\n    getUrlParameters,\r\n    getUrlParameterByName,\r\n    replaceUrlParameter,\r\n    decodeUri,\r\n    encodeUri,\r\n    removeString,\r\n    isArray,\r\n    includes,\r\n    find,\r\n    flat,\r\n    filterAlphaNumericPlus,\r\n    capitaliseFirstLetter,\r\n    stringContains,\r\n    getSubstringIndex,\r\n    replacePlaceholders,\r\n    generateUUID,\r\n    removeElements,\r\n    log,\r\n    sleep,\r\n    randomInteger,\r\n    choice\r\n};\r\n"],"names":[],"mappings":"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"}